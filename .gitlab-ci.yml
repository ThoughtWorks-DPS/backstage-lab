image: docker:latest

variables:
  PASSWORD: $SERVICE_PRINCIPAL_PASSWORD
  TENANT_ID: $TENANT_ID
  APP_ID: $APP_ID
  SUBSCRIPTION: 3344a922-f246-4f27-a6f1-3c85586f7b99

stages:
  - build
  - deploy

services:
  - docker:dind

build_staging_image:
  stage: build
  script:
    - echo "====> Initiating Docker Build process"
    - docker login backstagepp.azurecr.io -u $APP_ID -p $PASSWORD
    # - docker build . -t backstage
    # - docker tag backstage backstagepp.azurecr.io/backstage:new
    # - docker push backstagepp.azurecr.io/backstage:new

deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  script:
    - az login --service-principal --username $APP_ID --password $PASSWORD --tenant $TENANT_ID
    - az aks get-credentials --resource-group backstage-aks_group --name backstage-aks
    - az aks install-cli
    - kubectl version
    - kubectl apply -f kubernetes/namespace.yaml
    - SEC=$(kubectl -n backstagehttp get secrets |grep -e backstage-secrets)
    - |- 
            if [[ -z $SEC ]]; then 
              kubectl -n backstagehttp create secret generic backstage-secrets --from-literal=GITHUB_TOKEN=$GITHUB_TOKEN --from-literal=AZURE_TECHDOCS_STORAGE_KEY=$AZURE_TECHDOCS_STORAGE_KEY
              echo "Not present"
            else 
              echo "Secret already exists"
            fi
    - kubectl apply -n backstagehttp -f kubernetes/backstage.yaml -f kubernetes/backstage-service.yaml
    - VAR=$(kubectl -n backstagehttp describe services |grep "LoadBalancer Ingress" |cut -d ":" -f2)
    - VAR=$(echo ${VAR// /})
    - echo "Access Backstage on - http://$VAR"

